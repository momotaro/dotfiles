# Langs
#------------------------------
[[plugins]] # Japanese doc
repo = 'vim-jp/vimdoc-ja'
on_ft = 'help'
hook_add = '''
  set helplang=ja,en
'''

[[plugins]] # Haml
repo  = 'tpope/vim-haml'
on_ft = 'haml'

[[plugins]] # Html5
repo  = 'othree/html5.vim'
on_ft = ['html', 'php', 'html.twig', 'twig', 'riot']
hook_add = '''
  autocmd BufNewFile,BufRead *.html set tabstop=4 shiftwidth=4
  autocmd BufNewFile,BufRead *.twig, *.html.twig set tabstop=4 shiftwidth=4

  " syntastic
  let g:syntastic_html_tidy_ignore_errors = []
  call add(g:syntastic_html_tidy_ignore_errors, 'missing </a> before <div>')
  call add(g:syntastic_html_tidy_ignore_errors, 'discarding unexpected </a>')
  call add(g:syntastic_html_tidy_ignore_errors, '<script> proprietary attribute "async"')
  call add(g:syntastic_html_tidy_ignore_errors, 'trimming empty')
  call add(g:syntastic_html_tidy_ignore_errors, '<img> lacks "src" attribute')
'''

[[plugins]] # Toml
repo  = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # Markdown
repo = 'tpope/vim-markdown'
on_ft = ['md', 'markdown']
hook_add = '''
  let g:markdown_fenced_languages = ['html', 'python', 'bash=sh']
  autocmd BufNewFile,BufRead *.md set filetype=markdown tabstop=2 shiftwidth=2
'''
repo = 'pocke/vim-textobj-markdown'
on_ft = ['md', 'markdown']


[[plugins]] # CSS
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'
hook_add = """
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
"""
repo = 'stephenway/postcss.vim'
on_ft = 'postcss'
hook_add = """
  autocmd FileType postcss setlocal omnifunc=csscomplete#CompleteCSS
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_completion_start_length = 2
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#sources = {}
  let g:deoplete#sources._=['omni', 'buffer', 'member', 'tag', 'ultisnips', 'file']
"""
[[plugins]]
repo = 'wavded/vim-stylus'
on_ft = 'stylus'

[[plugins]]
repo = 'gcorne/vim-sass-lint'
on_ft = ['sass', 'scss']
hook_add = '''
  autocmd BufNewFile,BufRead *.scss set filetype=scss tabstop=2 shiftwidth=2
  let g:syntastic_scss_checkers=["sasslint"]

  autocmd BufNewFile,BufRead *.sass set filetype=sass tabstop=2 shiftwidth=2
  let g:syntastic_sass_checkers=["sasslint"]
'''

[[plugins]] # coffeescript
repo = 'kchmck/vim-coffee-script'
on_ft = 'coffee'
hook_add = '''
  autocmd BufNewFile,BufRead *.coffee set filetype=coffee tabstop=2 shiftwidth=2
'''

[[plugins]] # Javascript
repo = 'pangloss/vim-javascript'
on_ft = ['javascript', 'html', 'riot']
hook_add = '''
  autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
  autocmd BufNewFile,BufRead *.js set filetype=javascript tabstop=2 shiftwidth=2
  autocmd BufNewFile,BufRead *.es6 set filetype=javascript tabstop=2 shiftwidth=2
'''
[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript', 'jsx', 'javascript.jsx', 'html', 'riot']
[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = ['javascript', 'jsx', 'javascript.jsx', 'html', 'riot']
hook_add = '''
  function! EnableJavascript()
    " Setup used libraries
    let g:used_javascript_libs = 'jquery,underscore,react,flux,jasmine'
    let b:javascript_lib_use_jquery = 1
    let b:javascript_lib_use_underscore = 1
    let b:javascript_lib_use_react = 1
    let b:javascript_lib_use_flux = 1
    let b:javascript_lib_use_jasmine = 1
    let b:javascript_lib_use_vue = 1
  endfunction
  autocmd FileType javascript,jsx,javascript.jsx call EnableJavascript()
'''
[[plugins]]
repo = 'jason0x43/vim-js-indent'
on_ft = ['javascript', 'jsx', 'javascript.jsx', 'typescript', 'html', 'riot']
hook_add = '''
  let g:js_indent_flat_switch = 1
'''

[[plugins]]
repo = 'moll/vim-node'
on_ft = ['javascript', 'jsx']
hook_add = '''
  autocmd User Node if &filetype == "javascript" | setlocal expandtab | endif

  " syntastic
  let g:syntastic_javascript_checkers = ['eslint'] "ESLintを使う
  let g:syntastic_mode_map = {
    \ 'mode': 'active',
    \ 'active_filetypes': ['javascript', 'jsx'],
    \ 'passive_filetypes': []
      \ }
'''
[[plugins]]
repo = 'myhere/vim-nodejs-complete'
on_ft = ['javascript', 'jsx']
[[plugins]]
repo = 'geekjuice/vim-mocha'
on_ft = 'javascript'
hook_add = """
  nmap ,tt :call RunCurrentSpecFile()<CR>
  nmap ,ts :call RunNearestSpec()<CR>
  nmap ,tl :call RunLastSpec()<CR>
  nmap ,ta :call RunAllSpecs()<CR>

  let g:mocha_js_command = "!mocha --recursive --no-colors {spec}"
  let g:mocha_coffee_command = "!mocha -b --compilers coffee:coffee-script{spec}"
"""

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = 'javascript'
[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript', 'jsx']
[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = 'pug'
hook_add = """
  autocmd BufRead,BufNewFile *.pug set filetype=pug tabstop=2 shiftwidth=2
"""
[[plugins]]
repo = 'ryym/vim-riot'
on_ft = 'riot'
hook_add = """
  autocmd BufRead,BufNewFile *.tag set filetype=riot tabstop=2 shiftwidth=2
"""

[[plugins]] # JSX
repo = 'othree/yajs.vim'
on_ft = ['javascript', 'jsx', 'javascript.jsx']
[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = 'jsx'
hook_add = """
  autocmd BufRead,BufNewFile *.jsx set filetype=jsx.javascript tabstop=2 shiftwidth=2
"""
[[plugins]]
repo = 'fleischie/vim-styled-components'
on_ft = ['javascript', 'jsx']

[[plugins]] # Typescript
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'
hook_add = """
  autocmd BufRead,BufNewFile *.ts set filetype=typescript expandtab tabstop=2 shiftwidth=2

  let g:typescript_compiler_binary = 'tsc'
  let g:typescript_compiler_options = ''
"""
[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = 'typescript'
hook_add = """
  let g:tsuquyomi_completion_detail = 1
  autocmd FileType typescript setlocal completeopt+=menu,preview
"""

[[plugins]] # Elixir
repo = 'elixir-lang/vim-elixir'
on_ft = 'elixir'

[[plugins]] # Ruby
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby', 'eruby']
hook_add = """
  autocmd FileType ruby setlocal omnifunc=ruby,erubycomplete#CompleteRuby
  autocmd BufNewFile,BufRead *.rb set tabstop=2 shiftwidth=2
  autocmd BufNewFile,BufRead *.erb set tabstop=2 shiftwidth=2
"""
[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = 'ruby'
[[plugins]]
repo = 'tpope/vim-bundler'
on_ft = 'ruby'
[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['ruby', 'eruby']
hook_add = """
  autocmd FileType ruby nnoremap <silent> ,a :<C-u>A<CR><ESC>
  autocmd FileType ruby nnoremap <silent> ,at :<C-u>AT<CR><ESC>
  autocmd FileType ruby nnoremap <silent> ,av :<C-u>AV<CR><ESC>
  autocmd FileType ruby nnoremap <silent> ,as :<C-u>AS<CR><ESC>

  let g:surround_{char2nr("-")} = "<% \r %>"
  let g:surround_{char2nr("=")} = "<%= \r %>"

  let g:syntastic_quiet_messages = {"level":"warnings"}
"""
[[plugins]]
repo = 'Shougo/deoplete-rct'
on_ft = ['ruby']
[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = 'ruby'
[[plugins]]
repo = 'osyo-manga/vim-monster'
on_i = 1
hook_add = '''
let g:monster#completion#rcodetools#backend = "async_rct_complete"
let g:deoplete#sources#omni#input_patterns = {
  \ "ruby" : '[^. *\t]\.\w*\|\h\w*::',
  \}
'''

[[plugins]] # Golang
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
  autocmd BufRead,BufNewFile *.go set filetype=go tabstop=4 shiftwidth=4 noexpandtab
'''
[[plugins]]
repo = 'nsf/gocode'
on_ft = 'go'
rtp = 'nvim/'
hook_add = '''
  let g:go_gocode_unimported_packages = 1
'''

[[plugins]] # PHP
repo = 'StanAngeloff/php.vim'
on_ft = 'php'
hook_add = """
  autocmd FileType php setlocal omnifunc=phpcomplete_extended#CompletePHP
  autocmd BufRead,BufNewFile *.php set filetype=php tabstop=4 shiftwidth=4

  function! PhpSyntaxOverride()
    hi! def link phpDocTags  phpDefine
    hi! def link phpDocParam phpType
  endfunction

  augroup phpSyntaxOverride
    autocmd!
    autocmd FileType php call PhpSyntaxOverride()
  augroup END

  autocmd FileType php inoremap <buffer><expr> . smartchr#loop('.', '->', '..', '...')
  autocmd FileType php inoremap <buffer><expr> , smartchr#loop(', ', ' => ',  ',')
"""
[[plugins]]
repo = 'padawan-php/deoplete-padawan'
on_ft = 'php'

[[plugins]]
repo = 'tobyS/pdv'
on_ft = 'php'

[[plugins]]
repo = 'lumiliet/vim-twig'
on_ft = ['html.twig', 'twig']

# Python
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_add = '''
  setlocal omnifunc=jedi#completions
  let g:jedi#use_tabs_not_buffers = 1 "補完で次の候補に進むときにtabを使えるという設定にしたつもりですができませんでした。
  let g:jedi#popup_select_first = 0 "1個目の候補が入力されるっていう設定を解除
  let g:jedi#popup_on_dot = 0 " .を入力すると補完が始まるという設定を解除
  let g:jedi#goto_command = "gf"
  let g:jedi#documentation_command = "<C-k>"
  let g:jedi#usages_command = "<leader>n"
  let g:jedi#rename_command = "<leader>R" "quick-runと競合しないように大文字Rに変更. READMEだと<leader>r
  autocmd FileType python setlocal completeopt-=preview "ポップアップを表示しない
'''

[[plugins]]
repo = 'jparise/vim-graphql'
on_ft = ['graphql', 'qql', 'Relay.QL', 'js']
hook_add = """
  autocmd BufNewFile,BufRead *.graphql set tabstop=2 shiftwidth=2
"""
